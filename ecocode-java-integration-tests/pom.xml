<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.ecocode</groupId>
		<artifactId>ecocode-java</artifactId>
		<version>1.6.3-SNAPSHOT</version>
	</parent>

	<artifactId>ecocode-java-integration-tests</artifactId>

	<properties>
		<java.version>17</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<!-- to prevent message: system modules path not set in conjunction with -source 11 -->
		<maven.compiler.release>${java.version}</maven.compiler.release>

		<encoding>UTF-8</encoding>
		<project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.ecocode</groupId>
			<artifactId>ecocode-java-plugin</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sonarsource.java</groupId>
			<artifactId>test-classpath-reader</artifactId>
			<version>7.34.0.35958</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.26.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.sonarsource.orchestrator</groupId>
			<artifactId>sonar-orchestrator-junit5</artifactId>
			<version>4.9.0.1920</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.sonarsource.sonarqube</groupId>
			<artifactId>sonar-plugin-api</artifactId>
			<version>${test-it.sonarqube.version}</version>
			<scope>provided</scope>
		</dependency>

		<!--

				<dependency>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
					<version>2.0.13</version>
				</dependency>
				<dependency>
					<groupId>ch.qos.logback</groupId>
					<artifactId>logback-classic</artifactId>
					<version>1.5.6</version>
				</dependency>
				<dependency>
					<groupId>commons-io</groupId>
					<artifactId>commons-io</artifactId>
					<version>2.16.1</version>
					<scope>test</scope>
				</dependency>
		-->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
					<execution>
						<id>add-integration-test-sources</id>
						<phase>process-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/src/it/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.basedir}/src/it/resources</directory>
								</resource>
								<resource>
									<filtering>true</filtering>
									<directory>${project.basedir}/src/it/resources-filtered</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>3.2.5</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<systemPropertyVariables>
								<test-it.sonar.keepRunning>${test-it.sonar.keepRunning}</test-it.sonar.keepRunning>
								<test-it.orchestrator.artifactory.url>${test-it.orchestrator.artifactory.url}</test-it.orchestrator.artifactory.url>
								<test-it.sonarqube.version>${test-it.sonarqube.version}</test-it.sonarqube.version>
								<!-- Comma separated list of plugins (`groupId:artifactId:version`) to install in SonarQube instance before lunching integration tests -->
								<test-it.plugins>
									${project.baseUri}/../ecocode-java-plugin/target/ecocode-java-plugin-${project.version}.jar,
									org.sonarsource.java:sonar-java-plugin:${sonarjava.version},
								</test-it.plugins>
								<!-- Comma separated JSON profile files to load -->
								<test-it.additional-profiles>
									${project.baseUri}/../ecocode-java-plugin/src/main/resources/fr/greencodeinitiative/java/ecoCode_way_profile.json,
								</test-it.additional-profiles>
								<!-- Path to "test project" to analyze -->
								<test-it.test-project>${project.baseUri}/../ecocode-java-plugin-test-project</test-it.test-project>
								<!-- Comma separated list of profiles to associate to "test project". Syntaxe: `language:profileName` -->
								<test-it.test-project-profile-by-language>
									java:ecoCode way,
								</test-it.test-project-profile-by-language>
							</systemPropertyVariables>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>keep-running</id>
			<properties>
				<test-it.sonar.keepRunning>true</test-it.sonar.keepRunning>
			</properties>
		</profile>
	</profiles>
</project>
